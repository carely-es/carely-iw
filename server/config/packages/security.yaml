security:
    password_hashers:
        App\Entity\User: 'auto'
    providers:
        users:
            entity:
                class: App\Entity\User
                property: username
    role_hierarchy:
      ROLE_BUYER: ROLE_USER
      ROLE_SELLER: ROLE_USER
      ROLE_ADMIN: [ ROLE_BUYER, ROLE_SELLER ]
    firewalls:
      login:
          pattern:  ^/api/login
          stateless: true
          json_login:
              check_path: /api/login_check
              success_handler: lexik_jwt_authentication.handler.authentication_success
              failure_handler: lexik_jwt_authentication.handler.authentication_failure
      register:
          pattern: ^/api/register
          stateless: true
      api:
         pattern: ^/api
         stateless: true
         jwt: ~




    access_control:
          - { path: ^/api/login, roles: PUBLIC_ACCESS }
          - { path: ^/api/register, roles: PUBLIC_ACCESS }
          - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }



when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
